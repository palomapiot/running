<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>es.udc.fi.dc.fd</groupId>
	<artifactId>softfic</artifactId>
	<packaging>war</packaging>
	<version>3.5.1-SNAPSHOT</version>
	<name>Softfic Running</name>
	<description>Softfic running app for Fed and Med</description>
 	<url>http://deploy.fic.udc.es/softfic</url>
  	<organization>
    	<name>Facultad de Informática de A Coruña</name>
    	<url>https://www.fic.udc.es/</url>
  	</organization>
	<licenses>
	  <license>
	    <name>Apache License 2.0</name>
	    <url>http://www.apache.org/licenses/LICENSE-2.0</url>
	  </license>
	</licenses>
	<developers>
	    <developer>
	      <id>david.tourino</id>
	      <name>David Touriño</name>
	      <email>david.tourino@udc.es</email>
	      <organization>Facultad de Informática de A Coruña</organization>
	      <organizationUrl>https://www.fic.udc.es/</organizationUrl>
	      <roles>
	        <role>Scrum Master</role>
	        <role>Project Manager</role>
	      </roles>
	    </developer>
	    <developer>
	      <id>paloma.piot</id>
	      <name>Paloma Piot</name>
	      <email>paloma.piot@udc.es</email>
	      <organization>Festis</organization>
	      <organizationUrl>https://festis.es/</organizationUrl>
	      <roles>
	        <role>Developer</role>
	        <role>Festis leader</role>
	        <role>CSS Manager</role>
	        <role>Paloma Programming Master</role>
	      </roles>
	    </developer>
	    <developer>
	      <id>daniel.gabin</id>
	      <name>Daniel Gabín</name>
	      <email>daniel.gabin@udc.es</email>
	      <organization>Facultad de Informática de A Coruña</organization>
	      <organizationUrl>https://www.fic.udc.es/</organizationUrl>
	      <roles>
	        <role>Developer</role>
	        <role>Localization Retrieval Master</role>
	        <role>Analyst</role>
	      </roles>
	    </developer>
	    <developer>
	      <id>j.manuel.rey</id>
	      <name>Manuel Rey</name>
	      <email>j.manuel.rey@udc.es</email>
	      <organization>Facultad de Informática de A Coruña</organization>
	      <organizationUrl>https://www.fic.udc.es/</organizationUrl>
	      <roles>
	        <role>Developer</role>
	        <role>Documentation reader</role>
	        <role>Criteria builder</role>
	        <role>Problems loader</role>
	      </roles>
	    </developer>
	    <developer>
	      <id>brais.mcastro</id>
	      <name>Brais Muñiz</name>
	      <email>brais.mcastro@udc.es</email>
	      <organization>Facultad de Informática de A Coruña</organization>
	      <organizationUrl>https://www.fic.udc.es/</organizationUrl>
	      <roles>
	        <role>Developer</role>
	        <role>Comment Master</role>
	      </roles>
	    </developer>
	    <developer>
	      <id>d.vilarsanchez</id>
	      <name>David Vilasanchez</name>
	      <email>d.vilasanchez@udc.es</email>
	      <organization>Facultad de Informática de A Coruña</organization>
	      <organizationUrl>https://www.fic.udc.es/</organizationUrl>
	      <roles>
	        <role>Developer</role>
	        <role>Stress Test leader</role>
	      </roles>
	    </developer>
	    <developer>
	      <id>alejandro.matos</id>
	      <name>Alejandro Matos</name>
	      <email>alejandro.matos@udc.es</email>
	      <organization>Facultad de Informática de A Coruña</organization>
	      <organizationUrl>https://www.fic.udc.es/</organizationUrl>
	      <roles>
	        <role>Developer</role>
	        <role>Pelican Worker</role>
	      </roles>
	    </developer>
	</developers>
	<scm>
	    <connection>scm:git@gitlab.fic.udc.es:root/softfic.git</connection>
	    <url>http://gitlab.fic.udc.es/root/softfic</url>
	</scm>	
	<contributors>
	    <contributor>
	      <name>Javier Parapar</name>
	      <email>javier.parapar@udc.es</email>
	      <url>http://www.dc.fi.udc.es/~parapar/</url>
	      <organization>Facultad de Informática de A Coruña</organization>
	      <organizationUrl>https://www.fic.udc.es/</organizationUrl>
	      <roles>
	        <role>FeD Teacher</role>
	      </roles>
	    </contributor>
	    <contributor>
	      <name>Daniel Valcarce</name>
	      <email>daniel.valcarce@udc.es</email>
	      <url>www.dc.fi.udc.es/~dvalcarce/</url>
	      <organization>Facultad de Informática de A Coruña</organization>
	      <organizationUrl>https://www.fic.udc.es/</organizationUrl>
	      <roles>
	        <role>MeD Teacher</role>
	        <role>Client</role>
	      </roles>
	    </contributor>
	</contributors>
  	<profiles>
	    <profile>
	        <id>dev</id>
	        <activation>
     			 <activeByDefault>true</activeByDefault>
    		</activation>
	        <properties>
	            <props.driverclass>com.mysql.jdbc.Driver</props.driverclass>
	            <props.datasource>jdbc:mysql://localhost/running?useSSL=false</props.datasource>
	            <props.username>running</props.username>
	            <props.passwd>running</props.passwd>
	            <props.dialect>org.hibernate.dialect.MySQLDialect</props.dialect>
	            <props.tables>update</props.tables>
	            <props.import>import.sql</props.import>
	            <props.show>true</props.show>
	            <props.format>true</props.format>
	            <props.comments>false</props.comments>
	        </properties>
	        <dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</dependency>
		    </dependencies>
	    </profile>
	    <profile>
	        <id>prod</id>
	        <properties>
	            <props.driverclass>org.hsqldb.jdbcDriver</props.driverclass>
	            <props.datasource>jdbc:hsqldb:mem:test</props.datasource>
	            <props.username>softfic</props.username>
	            <props.passwd>running</props.passwd>
	            <props.dialect>org.hibernate.dialect.HSQLDialect</props.dialect>
	            <props.tables>create</props.tables>
	            <props.import>import.sql</props.import>
	            <props.show>false</props.show>
	            <props.format>false</props.format>
	            <props.comments>false</props.comments>
	        </properties>
	        <build>
		        <plugins>
		        <!-- redefinimos el plugin de surefire, para integrarlo con jacoco -->
		            <plugin> 
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-surefire-plugin</artifactId>
		                <configuration>
		                    <argLine>${jacoco.agent.ut.arg}</argLine>
		                    <!-- Specific to generate mapping between tests and covered code -->
		                    <properties>
		                        <property>
		                            <name>listener</name>
		                            <value>org.sonar.java.jacoco.JUnitListener</value>
		                        </property>
		                    </properties>
		                    <!-- test failure ignore -->
		                    <testFailureIgnore>true</testFailureIgnore>
		                </configuration>
		            </plugin>
		            <plugin>
			          <groupId>org.apache.maven.plugins</groupId>
			          <artifactId>maven-failsafe-plugin</artifactId>
			          <configuration>
			            	<argLine>${jacoco.agent.it.arg}</argLine>
			            	<properties>
		                        <property>
		                            <name>listener</name>
		                            <value>org.sonar.java.jacoco.JUnitListener</value>
		                        </property>
		                     </properties>
		                     <testFailureIgnore>true</testFailureIgnore>
			          </configuration>              
			          <executions>
			            <execution>
			              <goals>
			                <goal>integration-test</goal>
			                <goal>verify</goal>
			              </goals>			           
			         	  <configuration>
		                	<!-- Sets the VM argument line used when integration tests are run. -->
		                	<argLine>${jacoco.agent.it.arg}</argLine>
		                    <properties>
		                        <property>
		                            <name>listener</name>
		                            <value>org.sonar.java.jacoco.JUnitListener</value>
		                        </property>
		                     </properties>
		                     <testFailureIgnore>true</testFailureIgnore>
		                 </configuration>	      
			            </execution>
			          </executions>
					</plugin>
	             <!-- Plugin de jacoco para cobertura -->
		            <plugin>
		                <groupId>org.jacoco</groupId>
		                <artifactId>jacoco-maven-plugin</artifactId>
		                <version>${jacoco.version}</version>
		                <executions>
		                    <execution>
		                        <id>prepare-ut-agent</id>
		                        <phase>process-test-classes</phase>
		                        <goals>
		                            <goal>prepare-agent</goal>
		                        </goals>
		                        <configuration>
		                            <propertyName>jacoco.agent.ut.arg</propertyName>
		                            <append>true</append>
		                        </configuration>
		                    </execution>
		                     <execution>
		                        <id>prepare-it-agent</id>
		                        <phase>pre-integration-test</phase>
		                        <goals>
		                            <goal>prepare-agent-integration</goal>
		                        </goals>
		                        <configuration>
		                            <propertyName>jacoco.agent.it.arg</propertyName>
		                            <append>true</append>
		                        </configuration>
		                    </execution>
					     </executions>
		            </plugin>
		            	<plugin>
						   <groupId>org.codehaus.cargo</groupId>
						   <artifactId>cargo-maven2-plugin</artifactId>
						   <version>1.6.5</version>
						   <configuration>
						      <wait>false</wait>
						      	<container>
									<containerId>tomcat8x</containerId>
									<zipUrlInstaller>
										<url>http://archive.apache.org/dist/tomcat/tomcat-8/v8.5.23/bin/apache-tomcat-8.5.23.zip</url>
										<downloadDir>${project.build.directory}/downloads</downloadDir>
										<extractDir>${project.build.directory}/extracts</extractDir>
									</zipUrlInstaller>
								</container>
						   </configuration>
						   <executions>
						      <execution>
						         <id>start-container</id>
						         <phase>pre-integration-test</phase>
         				         <goals>
						            <goal>start</goal>
						         </goals>
						         <configuration>
					                <configuration>
					                  <properties>
					                    <cargo.jvmargs>
					                      ${jacoco.agent.it.arg}
					                    </cargo.jvmargs>
					                  </properties>
					                </configuration>
					              </configuration>
						      </execution>
						      <execution>
						         <id>stop-container</id>
						         <phase>post-integration-test</phase>
						         <goals>
						           <goal>stop</goal>
						         </goals>
						      </execution>
						   </executions>
						</plugin>
		        </plugins>
		    </build>
	        <dependencies>
				<dependency>
				    <groupId>org.sonarsource.java</groupId>
				    <artifactId>sonar-jacoco-listeners</artifactId>
				    <version>${sonar-jacoco-listeners.version}</version>
				</dependency>
		        <dependency> 
					<groupId>org.hsqldb</groupId>
					<artifactId>hsqldb</artifactId> 
				</dependency> 
		    </dependencies>
	    </profile>
	    
	</profiles>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java-version>1.8</java-version>
		<!-- Override Spring version -->
		<!-- spring.version>4.3.9.RELEASE</spring.version -->
		<!-- Thymeleaf 3 -->
		<org.thymeleaf-version>3.0.6.RELEASE</org.thymeleaf-version>
		<org.thymeleaf.extras.springsecurity4-version>3.0.2.RELEASE</org.thymeleaf.extras.springsecurity4-version>
		<nz.net.ultraq.thymeleaflayout-version>2.2.2</nz.net.ultraq.thymeleaflayout-version>
		<thymeleaf-extras-java8time-version>3.0.0.RELEASE</thymeleaf-extras-java8time-version>
		<!-- AssertJ -->
		<assertj-core-version>3.8.0</assertj-core-version>
		<!-- Sonar/Jacoco integration. Note that these properties need to be defined outside the "coverage" profile
		because we want to be to able to execute mvn sonar:sonar without passing a profile -->
		<!-- Tells Sonar to use jacoco for coverage results -->
		<sonar.projectKey>es.udc.fi.dc.fd:softfic</sonar.projectKey>
		<sonar.projectName>${project.name}</sonar.projectName>
		<sonar.projectVersion>${project.version}</sonar.projectVersion>
		<sonar.language>java</sonar.language>
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<!-- Jacoco version to use -->
		<jacoco.version>0.7.9</jacoco.version>
		<!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test -->
		<sonar-jacoco-listeners.version>4.15.0.12310</sonar-jacoco-listeners.version>
		
		<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
		<!-- === END of Sonar/Reporting settings === -->
		<selenium.ver>3.7.1</selenium.ver>
		
	</properties>
	<parent>
		<groupId>io.spring.platform</groupId>
		<artifactId>platform-bom</artifactId>
		<version>Athens-SR1</version>
		<relativePath />
	</parent>
	<dependencyManagement>
		<dependencies>
			<!-- Selenium - Tests de aceptación -->
	        <dependency>
		        <groupId>org.seleniumhq.selenium</groupId>
		        <artifactId>selenium-java</artifactId>
		        <version>3.8.1</version>
		    </dependency>      

		      <dependency>
		        <groupId>org.seleniumhq.selenium</groupId>
		        <artifactId>selenium-firefox-driver</artifactId>
		        <version>3.8.1</version>
		      </dependency>

		      <dependency>
		        <groupId>org.seleniumhq.selenium</groupId>
		        <artifactId>selenium-remote-driver</artifactId>
		        <version>3.8.1</version>
		      </dependency>
		      <dependency>
		        <groupId>org.seleniumhq.selenium</groupId>
		        <artifactId>selenium-api</artifactId>
		        <version>3.8.1</version>
		      </dependency>			   
		      <dependency>
      		  	<groupId>com.google.guava</groupId>
      			<artifactId>guava</artifactId>
      			<version>23.0</version>
			  </dependency>
		       
		</dependencies>
	</dependencyManagement>
	
	<dependencies>
	<!-- Selenium - Tests de aceptación -->
	     <dependency>
	        <groupId>org.seleniumhq.selenium</groupId>
	        <artifactId>selenium-java</artifactId>
	     </dependency>      

	     <dependency>
	        <groupId>org.seleniumhq.selenium</groupId>
	        <artifactId>selenium-firefox-driver</artifactId>
	     </dependency>
	     <dependency>
	        <groupId>org.seleniumhq.selenium</groupId>
	        <artifactId>selenium-remote-driver</artifactId>
	     </dependency>
	     <dependency>
	       <groupId>org.seleniumhq.selenium</groupId>
	       <artifactId>selenium-api</artifactId>
	     </dependency>			    

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<!-- File Upload -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.3.1</version>
		</dependency>
		<!-- Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<!-- View -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${org.thymeleaf-version}</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
			<!-- TODO Remove once available in platform BOM -->
			<version>${org.thymeleaf-version}</version>
			<!-- Avoid org.hibernate.jpa.boot.archive.spi.ArchiveException: Could 
				not build ClassFile in Java 8 -->
			<exclusions>
				<exclusion>
					<artifactId>javassist</artifactId>
					<groupId>org.javassist</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
			<!-- TODO Remove version once available in platform BOM -->
			<version>${org.thymeleaf.extras.springsecurity4-version}</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-java8time</artifactId>
			<version>${thymeleaf-extras-java8time-version}</version>
		</dependency>
		<!-- Persistence -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<!-- Avoid issue #72 Could not initialize class org.thymeleaf.templateresolver.ServletContextTemplateResolver 
				due to 'validation is not supported' -->
			<exclusions>
				<exclusion>
					<artifactId>pull-parser</artifactId>
					<groupId>pull-parser</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Avoid: javax.validation.ValidationException: HV000183: Unable to load 
			'javax.el.ExpressionFactory' -->
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<scope>test</scope>
		</dependency>


		<!-- <dependency> <groupId>org.postgresql</groupId> <artifactId>postgresql</artifactId> 
			<version>9.4.1207</version> </dependency> -->
		<!-- Spring Data -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
		</dependency>
		<!-- Validation -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
		</dependency>
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- JSON -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<!-- Utilities -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-core-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>1.6.0</version>
        </dependency>
		<!-- Dependencias necesarias para el autocompletado con JSON -->        
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-mapper-asl</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-jaxrs</artifactId>
		    <version>1.9.12</version>
		</dependency>
		<dependency>
		    <groupId>org.codehaus.jackson</groupId>
		    <artifactId>jackson-core-asl</artifactId>
		</dependency>
		<!-- FIN Dependencias necesarias para el autocompletado con JSON --> 

	</dependencies>
		<build>
		<resources>
	        <resource>
	            <directory>src/main/resources</directory>
	            <filtering>true</filtering>
	        </resource>
    	</resources>
		<plugins>
			<plugin>
	          <artifactId>maven-failsafe-plugin</artifactId>
	          <executions>
	            <execution>
	              <goals>
	                <goal>integration-test</goal>
	                <goal>verify</goal>
	              </goals>
 				</execution>
	          </executions>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<path>/</path>
					<uriEncoding>${project.build.sourceEncoding}</uriEncoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
					<debug>true</debug>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<warName>softfic-${project.version}</warName>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
	      		<groupId>org.apache.maven.plugins</groupId>
	      		<artifactId>maven-project-info-reports-plugin</artifactId>
	      		<version>2.9</version>
	    	</plugin>
	    </plugins>
	</build>
	<reporting>
	  <plugins>
	    <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-project-info-reports-plugin</artifactId>
	      <version>2.9</version>
	    </plugin>
	    <plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-javadoc-plugin</artifactId>
		  <version>2.10.4</version>
	  	</plugin>
	    <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>${jacoco.version}</version>
        </plugin>
		<plugin>
        	<groupId>org.apache.maven.plugins</groupId>
        	<artifactId>maven-surefire-report-plugin</artifactId>
        	<version>2.20.1</version>
        	<configuration>
                <argLine>${jacoco.agent.ut.arg}</argLine>
                <!-- Specific to generate mapping between tests and covered code -->
                <properties>
                    <property>
                        <name>listener</name>
                        <value>org.sonar.java.jacoco.JUnitListener</value>
                    </property>
                </properties>
                <!-- test failure ignore -->
                <testFailureIgnore>true</testFailureIgnore>
            </configuration>        	
      	</plugin>
	  </plugins>
	</reporting>
</project>